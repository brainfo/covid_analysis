import numpy as np
ACCNUMS = np.loadtxt('/shared/projects/form_2022_19/hong/sars2copath/analyses/hong_run_accessions.txt', dtype='str')

rule all:
    input:
        expand(['output/fastqc/{accnum}_{read}_fastqc.html', "output/heatmap/sample_virus_heatmap.html"],accnum=ACCNUMS, read=[1, 2])

rule fastqc:
    input:
        "data/sra_fastq/{accnum}_{read}.fastq.gz"
    output:
        "output/fastqc/{accnum}_{read}_fastqc.html"
    params:
        inputdir="data/sra_fastq/",
        outdir="output/fastqc"
    threads: 4
    shell:
        "mkdir -p {params.outdir};"
        "fastqc --noextract -t {threads} {params.inputdir}* -o {params.outdir}"

rule flash2:
    input:
        fq1="data/sra_fastq/{accnum}_1.fastq.gz",
        fq2="data/sra_fastq/{accnum}_2.fastq.gz"
    output:
        "output/flash2/{accnum}.flash.extendedFrags.fastq.gz"
        # "output/flash2/{accnum}.flash.histogram",
        # "output/flash2/{accnum}.flash.notCombined_1.fastq.gz",
        # "output/flash2/{accnum}.flash.notCombined_2.fastq.gz",
        # "output/flash2/{accnum}.flash.hist"
    params:
        outdir='output/flash2'
    threads: 8
    shell:
        "mkdir -p {params.outdir};"
        "flash2 --threads={threads} -z --output-directory={params.outdir} --output-prefix={wildcards.accnum}.flash {input.fq1} {input.fq2}"

rule kraken:
    input:
        db="/shared/projects/form_2022_19/kraken2/arch_bact_vir_hum_protoz_fung",
        fq1="data/sra_fastq/{accnum}_1.fastq.gz",
        fq2="data/sra_fastq/{accnum}_2.fastq.gz"
    output:
        result="output/kraken/kraken_{accnum}_results.tab",
        report="output/kraken/kraken_{accnum}_reports.tab"
    params:
        outdir='output/kraken'
    threads: 4
    shell:
        "mkdir -p {params.outdir};"
        "kraken2 --threads {threads} --gzip-compressed --paired --db {input.db} {input.fq1} {input.fq2} --output {output.result} --report {output.report}"

rule bracken:
    input:
        db="/shared/projects/form_2022_19/kraken2/arch_bact_vir_hum_protoz_fung",
        kraken_report="output/kraken/kraken_{accnum}_reports.tab"
    output:
        result="output/bracken/braken_{accnum}_results.tab",
        report="output/bracken/braken_{accnum}_reports.tab"
    params:
        outdir='output/bracken'
    threads: 4
    shell:
        "mkdir -p {params.outdir};"
        "bracken -d {input.db} -i {input.kraken_report} -o {output.result} -w {output.report} -r 50 -t 5"

rule bracken2krona:
    input:
        bracken_report="output/bracken/braken_{accnum}_reports.tab"
    output:
        raw=temp("output/krona/{accnum}_krona.txt"),
        clean="output/krona/{accnum}"
    params:
        outdir='output/krona'
    threads: 1
    shell:
        "mkdir -p {params.outdir};"
        "python /shared/projects/form_2022_19/kraken2/KrakenTools/kreport2krona.py -r {input.bracken_report} -o {output.raw} --no-intermediate-ranks;"
        "sed 's/[a-z]__//g' {output.raw} > {output.clean}"

rule krona_plot:
    input:
        expand("output/krona/{accnum}", accnum=ACCNUMS)
    output:
        "output/krona/krona.html"
    shell:
        "/shared/home/phingamp/medbioinfo_folder/kraken2/bin/ktImportText {input} -o {output}"

rule sample_virus_heatmap:
    input:
        db="/shared/projects/form_2022_19/pascal/central_database/sample_collab.db"
    output:
        html="output/heatmap/sample_virus_heatmap.html"
    params:
        outdir='output/heatmap'
    script:
        "scripts/sample_virus_heatmap.R"